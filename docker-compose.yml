version: "3.9"

# First draft 
services:
  # ────────────────────────────
  core_status_api:
    build:
      context: .
      dockerfile: backend/core_status_api/dockerfile
    container_name: core_status_api
    ports:
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config:/app/config
    depends_on:
      - prometheus


  fastapiapp:
    build:
      context: .
      dockerfile: backend/dockerfile
    container_name: fastapiapp
    ports:
      - "8001:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config:/app/config
      - /home/user/oai-cn5g:/home/user/oai-cn5g
    cap_add:
      - NET_RAW
    depends_on:
      - prometheus
    environment:
      - PROMETHEUS_URL=http://prometheus:9090
      - FIVEG_CORE_DOCKER_COMPOSE_PATH=/home/user/oai-cn5g/docker-compose.yaml



  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml

#  gnb_monitor:
#    build:
#      context: .
#      dockerfile: backend/dockerfile
#    container_name: gnb_monitor
#    command: uvicorn gnb_monitor:app --host 0.0.0.0 --port 8000
#    ports:
#      - "8002:8000"
#    environment:
#      - PROMETHEUS_MULTIPROC_DIR=/tmp
#    volumes:
#      - ./backend:/app
#    depends_on:
#      - backend


#  frontend:
#    build:
#      context: ./frontend
#    container_name: react_dashboard
#    ports:
#      - "3000:3000"
#    depends_on:
#      - backend

#  nginx:
#    image: nginx:latest
#    container_name: nginx_proxy
#    ports:
#      - "80:80"
#    volumes:
#      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
#    depends_on:
#      - frontend
#      - backend


  # Why not ?
#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor:latest
#    container_name: cadvisor
#    ports:
#      - "8080:8080"
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:ro
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro

#  node-exporter:
#    image: prom/node-exporter
#    container_name: node_exporter
#    ports:
#      - "9100:9100"

#  influxdb:
#    image: influxdb:2.7
#    container_name: influxdb
#    ports:
#      - "8086:8086"
#    volumes:
#      - ./influxdb/data:/var/lib/influxdb2
#    environment:
#      - DOCKER_INFLUXDB_INIT_MODE=setup
#      - DOCKER_INFLUXDB_INIT_USERNAME=admin
#      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
#      - DOCKER_INFLUXDB_INIT_ORG=oai
#      - DOCKER_INFLUXDB_INIT_BUCKET=oai_metrics
#      - DOCKER_INFLUXDB_INIT_TOKEN=mysecrettoken
